//==========================================================================
//
//  File:        ParserDump.java
//  Location:    TigerCompiler <Java>
//  Description: Verifier dump
//  Version:     2008.12.27.
//  License:     BSD License
//
//  Copyright(C) F.R.C., All rights reserved.
//  Redistribution and use in source and binary forms, with or without
//  modification, are permitted provided that the following conditions are met:
//      * Redistributions of source code must retain the above copyright
//        notice, this list of conditions and the following disclaimer.
//      * Redistributions in binary form must reproduce the above copyright
//        notice, this list of conditions and the following disclaimer in the
//        documentation and/or other materials provided with the distribution.
//      * Neither the name of the the copyright holders nor the
//        names of its contributors may be used to endorse or promote products
//        derived from this software without specific prior written permission.
//  
//  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
//  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
//  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY
//  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
//  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
//  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
//  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
//  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//
//==========================================================================

package Dumps;

import static StringUtil.StringUtil.*;

import java.io.*;

import Syntax.node.*;
import Syntax.lexer.*;
import Syntax.parser.*;
import Syntax.analysis.*;
import Semantics.lexer.*;

public class LexerDump {
    public static void PrintTokens(Reader i) throws Throwable {
        Lexer lexer = new TigerLexer(new PushbackReader(i, 1024));

        Token t = lexer.next();
        while ((t != null) && (!(t instanceof EOF))) {
            if (t instanceof TWhitespace) {
                System.out.println(Format("Line={0}, Column={1}, Token={2}", t.getLine(), t.getPos(), t.getClass().getSimpleName()));
            }
            else {
                System.out.println(Format("Line={0}, Column={1}, Token={2}, Text={3}", t.getLine(), t.getPos(), t.getClass().getSimpleName(), t.getText()));
            }
            t = lexer.next();
        }
    }
}
