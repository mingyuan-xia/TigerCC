package Semantics.verifier;

import Syntax.node.*;

public class ErrorReporter {
    private static int ErrorCount = 0;
    private static int WarningCount = 0;

    public static void NewError(Token token, String s) throws VerifierException {
        ErrorCount += 1;
        System.out.println(Format("SemanticsError at ({0}, {1}): {2}", token.getLine(), token.getPos(), s));
        if (ErrorCount >= 100) { throw new VerifierException("Num of Error reached the maximum of 100."); }
    }

    public static void NewWarning(Token token, String s) {
        if (WarningCount > 100) { return; }
        WarningCount += 1;
        System.out.println(Format("SemanticsWarning at ({0}, {1}): {2}", token.getLine(), token.getPos(), s));
        if (WarningCount >= 100) {
            System.out.println("Num of Warning reached the maximum of 100.");
            WarningCount += 1;
        }
    }

    /**
     * 模拟.Net格式化
     */
    private static String Format(String format, Object... args) {
        for (int i = 0; i < args.length; i++) {
            format = format.replace("{" + Integer.toString(i) + "}", args[i].toString());
        }
        return format;
    }
}
