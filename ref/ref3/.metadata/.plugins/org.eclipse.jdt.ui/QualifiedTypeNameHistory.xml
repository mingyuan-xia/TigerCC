<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="java.lang.IndexOutOfBoundsException"/>
<fullyQualifiedTypeName name="java.util.Map.Entry"/>
<fullyQualifiedTypeName name="java.awt.Graphics2D"/>
<fullyQualifiedTypeName name="java.awt.geom.Line2D.Double"/>
<fullyQualifiedTypeName name="javax.swing.GroupLayout"/>
<fullyQualifiedTypeName name="java.util.Random"/>
<fullyQualifiedTypeName name="CardDeliverer.CardsDelivererAlreadyFinishedException"/>
<fullyQualifiedTypeName name="java.util.Scanner"/>
<fullyQualifiedTypeName name="java.sql.SQLInput"/>
<fullyQualifiedTypeName name="javax.media.opengl.GL"/>
<fullyQualifiedTypeName name="logic.LogicController"/>
<fullyQualifiedTypeName name="physics.Physics"/>
<fullyQualifiedTypeName name="graphics.Graphics"/>
<fullyQualifiedTypeName name="audio.Audio"/>
<fullyQualifiedTypeName name="ai.ScoutCommander"/>
<fullyQualifiedTypeName name="javax.swing.JFrame"/>
<fullyQualifiedTypeName name="java.awt.Frame"/>
<fullyQualifiedTypeName name="java_cup.runtime.Scanner"/>
<fullyQualifiedTypeName name="java.util.Vector"/>
<fullyQualifiedTypeName name="java.util.regex.Pattern"/>
<fullyQualifiedTypeName name="java_cup.runtime.Symbol"/>
<fullyQualifiedTypeName name="java_cup.runtime.ComplexSymbolFactory"/>
<fullyQualifiedTypeName name="CUP.Parser.actions.Node"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.Semantic"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.semantics.PrintSemantic"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.builder.SerializedParser"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.syntax.builder.SyntaxBuilder"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.builder.CompiledTables"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.lexer.LexerBuilder"/>
<fullyQualifiedTypeName name="fri.patterns.interpreter.parsergenerator.lexer.LexerSemantic"/>
<fullyQualifiedTypeName name="Lexer.TigerLexer"/>
<fullyQualifiedTypeName name="java.util.Dictionary"/>
<fullyQualifiedTypeName name="Syntax.node.Node"/>
<fullyQualifiedTypeName name="Semantics.verifier.VerifierException"/>
<fullyQualifiedTypeName name="java.util.ArrayList"/>
<fullyQualifiedTypeName name="java.util.Arrays"/>
<fullyQualifiedTypeName name="Semantics.verifier.VerifierBase.Type"/>
<fullyQualifiedTypeName name="Semantics.verifier.Verifier"/>
<fullyQualifiedTypeName name="java.lang.Math"/>
<fullyQualifiedTypeName name="java.util.LinkedList"/>
<fullyQualifiedTypeName name="Dumps.VerifierDump"/>
<fullyQualifiedTypeName name="org.objectweb.asm.MethodVisitor"/>
<fullyQualifiedTypeName name="Semantics.generator.ExprGenerator"/>
<fullyQualifiedTypeName name="Syntax.node.Start"/>
<fullyQualifiedTypeName name="java.io.FileOutputStream"/>
<fullyQualifiedTypeName name="Semantics.generator.Generator.MemberSignature"/>
<fullyQualifiedTypeName name="TigerStandardLibrary.TigerStandardLibrary"/>
<fullyQualifiedTypeName name="Semantics.verifier.VerifierBase.StrType"/>
<fullyQualifiedTypeName name="Semantics.verifier.VerifierBase.Field"/>
<fullyQualifiedTypeName name="StringUtil.StringUtil"/>
<fullyQualifiedTypeName name="Syntax.node.ALetExpr"/>
<fullyQualifiedTypeName name="Syntax.analysis.DepthFirstAdapter"/>
<fullyQualifiedTypeName name="Semantics.verifier.VerifierBase.IntType"/>
<fullyQualifiedTypeName name="Semantics.generator.Generator"/>
</qualifiedTypeNameHistroy>
