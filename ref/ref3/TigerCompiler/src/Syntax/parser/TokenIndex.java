/* This file was generated by SableCC (http://www.sablecc.org/). */

package Syntax.parser;

import Syntax.node.*;
import Syntax.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTArray(@SuppressWarnings("unused") TArray node)
    {
        this.index = 0;
    }

    @Override
    public void caseTBreak(@SuppressWarnings("unused") TBreak node)
    {
        this.index = 1;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 2;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 3;
    }

    @Override
    public void caseTEnd(@SuppressWarnings("unused") TEnd node)
    {
        this.index = 4;
    }

    @Override
    public void caseTFor(@SuppressWarnings("unused") TFor node)
    {
        this.index = 5;
    }

    @Override
    public void caseTFunction(@SuppressWarnings("unused") TFunction node)
    {
        this.index = 6;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 7;
    }

    @Override
    public void caseTIn(@SuppressWarnings("unused") TIn node)
    {
        this.index = 8;
    }

    @Override
    public void caseTLet(@SuppressWarnings("unused") TLet node)
    {
        this.index = 9;
    }

    @Override
    public void caseTNil(@SuppressWarnings("unused") TNil node)
    {
        this.index = 10;
    }

    @Override
    public void caseTOf(@SuppressWarnings("unused") TOf node)
    {
        this.index = 11;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 12;
    }

    @Override
    public void caseTTo(@SuppressWarnings("unused") TTo node)
    {
        this.index = 13;
    }

    @Override
    public void caseTType(@SuppressWarnings("unused") TType node)
    {
        this.index = 14;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 15;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 16;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 17;
    }

    @Override
    public void caseTColon(@SuppressWarnings("unused") TColon node)
    {
        this.index = 18;
    }

    @Override
    public void caseTSemicolon(@SuppressWarnings("unused") TSemicolon node)
    {
        this.index = 19;
    }

    @Override
    public void caseTLParen(@SuppressWarnings("unused") TLParen node)
    {
        this.index = 20;
    }

    @Override
    public void caseTRParen(@SuppressWarnings("unused") TRParen node)
    {
        this.index = 21;
    }

    @Override
    public void caseTLBrack(@SuppressWarnings("unused") TLBrack node)
    {
        this.index = 22;
    }

    @Override
    public void caseTRBrack(@SuppressWarnings("unused") TRBrack node)
    {
        this.index = 23;
    }

    @Override
    public void caseTLCurly(@SuppressWarnings("unused") TLCurly node)
    {
        this.index = 24;
    }

    @Override
    public void caseTRCurly(@SuppressWarnings("unused") TRCurly node)
    {
        this.index = 25;
    }

    @Override
    public void caseTDot(@SuppressWarnings("unused") TDot node)
    {
        this.index = 26;
    }

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 27;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 28;
    }

    @Override
    public void caseTMultiply(@SuppressWarnings("unused") TMultiply node)
    {
        this.index = 29;
    }

    @Override
    public void caseTDivide(@SuppressWarnings("unused") TDivide node)
    {
        this.index = 30;
    }

    @Override
    public void caseTEquals(@SuppressWarnings("unused") TEquals node)
    {
        this.index = 31;
    }

    @Override
    public void caseTNotEquals(@SuppressWarnings("unused") TNotEquals node)
    {
        this.index = 32;
    }

    @Override
    public void caseTLess(@SuppressWarnings("unused") TLess node)
    {
        this.index = 33;
    }

    @Override
    public void caseTLessOrEqual(@SuppressWarnings("unused") TLessOrEqual node)
    {
        this.index = 34;
    }

    @Override
    public void caseTGreater(@SuppressWarnings("unused") TGreater node)
    {
        this.index = 35;
    }

    @Override
    public void caseTGreaterOrEqual(@SuppressWarnings("unused") TGreaterOrEqual node)
    {
        this.index = 36;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 37;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 38;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 39;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 40;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 41;
    }

    @Override
    public void caseTCommentBody(@SuppressWarnings("unused") TCommentBody node)
    {
        this.index = 42;
    }

    @Override
    public void caseTCommentEnd(@SuppressWarnings("unused") TCommentEnd node)
    {
        this.index = 43;
    }

    @Override
    public void caseTStr(@SuppressWarnings("unused") TStr node)
    {
        this.index = 44;
    }

    @Override
    public void caseTEscapeChar(@SuppressWarnings("unused") TEscapeChar node)
    {
        this.index = 45;
    }

    @Override
    public void caseTControlChar(@SuppressWarnings("unused") TControlChar node)
    {
        this.index = 46;
    }

    @Override
    public void caseTGraphChar(@SuppressWarnings("unused") TGraphChar node)
    {
        this.index = 47;
    }

    @Override
    public void caseTSimpleChar(@SuppressWarnings("unused") TSimpleChar node)
    {
        this.index = 48;
    }

    @Override
    public void caseTLineContinuer(@SuppressWarnings("unused") TLineContinuer node)
    {
        this.index = 49;
    }

    @Override
    public void caseTStrEnd(@SuppressWarnings("unused") TStrEnd node)
    {
        this.index = 50;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 51;
    }
}
