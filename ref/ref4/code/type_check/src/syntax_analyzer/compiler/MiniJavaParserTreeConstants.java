/* Generated By:JJTree: Do not edit this line. .\MiniJavaParserTreeConstants.java */
package syntax_analyzer.compiler;

public interface MiniJavaParserTreeConstants
{
  public int JJTROOT = 0;
  public int JJTMAINCLASS = 1;
  public int JJTMAINMETHODDECLARATION = 2;
  public int JJTVOID = 3;
  public int JJTCLASSDECLARATION = 4;
  public int JJTCLASSEXTENDSDECLARATION = 5;
  public int JJTVARIABLEDECLARATION = 6;
  public int JJTMETHODDECLARATION = 7;
  public int JJTFORMALPARAMETER = 8;
  public int JJTTYPE = 9;
  public int JJTARRAYTYPE = 10;
  public int JJTBOOLEANTYPE = 11;
  public int JJTINTEGERTYPE = 12;
  public int JJTIDENTIFIER = 13;
  public int JJTSTATEMENT = 14;
  public int JJTBLOCK = 15;
  public int JJTASSIGNMENTSTATEMENT = 16;
  public int JJTARRAYASSIGNMENTSTATEMENT = 17;
  public int JJTIFSTATEMENT = 18;
  public int JJTWHILESTATEMENT = 19;
  public int JJTPRINTSTATEMENT = 20;
  public int JJTEXPRESSION = 21;
  public int JJTANDEXPRESSION = 22;
  public int JJTCOMPAREEXPRESSION = 23;
  public int JJTPLUSEXPRESSION = 24;
  public int JJTMINUSEXPRESSION = 25;
  public int JJTTIMESEXPRESSION = 26;
  public int JJTARRAYLOOKUP = 27;
  public int JJTARRAYLENGTH = 28;
  public int JJTMESSAGESEND = 29;
  public int JJTINTEGERLITERAL = 30;
  public int JJTTRUELITERAL = 31;
  public int JJTFALSELITERAL = 32;
  public int JJTNOTEXPRESSION = 33;


  public String[] jjtNodeName = {
    "Root",
    "MainClass",
    "MainMethodDeclaration",
    "void",
    "ClassDeclaration",
    "ClassExtendsDeclaration",
    "VariableDeclaration",
    "MethodDeclaration",
    "FormalParameter",
    "Type",
    "ArrayType",
    "BooleanType",
    "IntegerType",
    "Identifier",
    "Statement",
    "Block",
    "AssignmentStatement",
    "ArrayAssignmentStatement",
    "IfStatement",
    "WhileStatement",
    "PrintStatement",
    "Expression",
    "AndExpression",
    "CompareExpression",
    "PlusExpression",
    "MinusExpression",
    "TimesExpression",
    "ArrayLookUp",
    "ArrayLength",
    "MessageSend",
    "IntegerLiteral",
    "TrueLiteral",
    "FalseLiteral",
    "NotExpression",
  };
}
